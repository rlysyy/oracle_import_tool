ALTER TABLE P2DBOWN.T_SMT_USER
 DROP PRIMARY KEY CASCADE;

DROP TABLE P2DBOWN.T_SMT_USER CASCADE CONSTRAINTS;

CREATE TABLE P2DBOWN.T_SMT_USER
(
  T_SMT_USER_UID    NUMBER                      NOT NULL,
  WORKER_ID         VARCHAR2(10 BYTE)           NOT NULL,
  WORKER_NAME       VARCHAR2(40 BYTE)           NOT NULL,
  PASSWORD          VARCHAR2(10 BYTE),
  CREATED_BY        VARCHAR2(20 BYTE)           NOT NULL,
  CREATE_TIMESTAMP  TIMESTAMP(6)                DEFAULT SYSTIMESTAMP          NOT NULL,
  UPDATED_BY        VARCHAR2(20 BYTE),
  UPDATE_TIMESTAMP  TIMESTAMP(6)
)
TABLESPACE P2DBTBL
RESULT_CACHE (MODE DEFAULT)
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX P2DBOWN.PK_T_SMT_USER ON P2DBOWN.T_SMT_USER
(T_SMT_USER_UID)
LOGGING
TABLESPACE P2DBTBL
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE OR REPLACE TRIGGER P2DBOWN.TRG_T_SMT_USER
BEFORE INSERT ON P2DBOWN.T_SMT_USER
FOR EACH ROW
DECLARE
BEGIN
	IF :NEW.T_SMT_USER_UID IS NULL THEN
		SELECT SEQ_T_SMT_USER_1.NEXTVAL
		INTO :NEW.T_SMT_USER_UID
		FROM DUAL;
	END IF;
END;
/


ALTER TABLE P2DBOWN.T_SMT_USER ADD (
  CONSTRAINT PK_T_SMT_USER
  PRIMARY KEY
  (T_SMT_USER_UID)
  USING INDEX P2DBOWN.PK_T_SMT_USER
  ENABLE VALIDATE);