# Oracle数据导入工具配置文件
# 版本：v0.2.0
# 最后更新：2024年

# ===========================================
# 数据库连接配置
# ===========================================
[database]
# Oracle数据库服务器地址
# 可以是IP地址或主机名
# 示例：192.168.1.100, localhost, db.company.com
host = localhost

# Oracle数据库端口号
# 默认值：1521
# 范围：1-65535
port = 1521

# Oracle服务名（Service Name）或SID
# 服务名示例：ORCLPDB1.localdomain, ORCL
# SID示例：ORCL, XE
service_name = ORCLPDB1.localdomain

# 数据库用户名
# 需要有目标schema的INSERT权限
username = p2dbown

# 数据库密码
# 建议使用强密码
password = p2dbown

# 目标数据库模式名（Schema）
# 数据将导入到此模式下的表中
schema = P2DBOWN

# ===========================================
# 数据导入设置
# ===========================================
[import_settings]
# 批量插入的记录数
# 建议范围：500-5000，过大可能导致内存问题，过小影响性能
# 默认值：1000
batch_size = 1000

# 操作失败时的最大重试次数
# 范围：0-10
# 默认值：3
max_retries = 3

# 数据库连接超时时间（秒）
# 范围：10-300
# 默认值：30
timeout = 30

# 是否自动提交事务
# 可选值：true, false
# true - 每个批次后自动提交
# false - 需要手动提交，出错时可以回滚
# 默认值：true
auto_commit = true

# 表不存在时是否自动创建
# 可选值：true, false
# true - 根据数据结构自动创建表
# false - 表不存在时报错（v0.2.0默认值，更安全）
# 建议：生产环境设置为false，开发环境可设置为true
create_table_if_not_exists = false

# ===========================================
# 数据类型映射配置
# ===========================================
[data_types]
# VARCHAR2字段的最大长度
# 范围：1-4000（Oracle标准限制）
# 默认值：4000
# 注意：超过此长度的字符串数据将被截断
string_max_length = 4000

# NUMBER字段的总精度（总位数）
# 范围：1-38（Oracle标准限制）
# 默认值：38（最大精度）
number_precision = 38

# NUMBER字段的小数位数
# 范围：0到number_precision的值
# 默认值：2
# 示例：precision=10, scale=2 表示最大8位整数+2位小数
number_scale = 2

# 时间戳字段的格式
# Oracle日期时间格式掩码
# 常用格式：
#   YYYY-MM-DD HH24:MI:SS.FF6 （年-月-日 时:分:秒.微秒）
#   YYYY-MM-DD HH24:MI:SS （年-月-日 时:分:秒）
#   DD/MM/YYYY HH12:MI:SS AM （日/月/年 12小时制）
timestamp_format = YYYY-MM-DD HH24:MI:SS.FF6

# ===========================================
# 日志配置
# ===========================================
[logging]
# 日志记录级别
# 可选值（从低到高）：DEBUG, INFO, WARNING, ERROR, CRITICAL
# DEBUG - 详细调试信息（包含所有SQL语句）
# INFO - 一般信息（推荐，默认值）
# WARNING - 警告信息
# ERROR - 错误信息
# CRITICAL - 严重错误
log_level = INFO

# 日志消息格式
# 支持的格式化字段：
#   %(asctime)s - 时间戳
#   %(name)s - 记录器名称
#   %(levelname)s - 日志级别
#   %(message)s - 日志消息
#   %(filename)s - 文件名
#   %(lineno)d - 行号
log_format = %(asctime)s - %(name)s - %(levelname)s - %(message)s

# 是否在控制台输出日志
# 可选值：true, false
# true - 同时输出到控制台和日志文件
# false - 仅输出到日志文件
# 默认值：true
console_output = true

# ===========================================
# 表头检测配置（v0.2.0新增功能）
# 用于智能识别数据文件是否包含表头
# ===========================================
[header_detection]
# 表头关键词配置，支持复杂的逻辑表达式
# 语法规则：
#   逗号(,) 表示 AND关系：所有关键词都必须存在
#   竖线(|) 表示 OR关系：任一关键词存在即可
#   可以混合使用，支持复杂逻辑
# 
# 配置示例：
#   CREATED_BY,CREATE_TIMESTAMP  （AND关系：两个都必须存在）
#   CREATE_TIMESTAMP|CREATED_BY  （OR关系：任一个存在即可）
#   id,name|code,type           （混合：(id AND name) OR (code AND type)）
#   ID|编号|序号                  （多个OR：支持中英文混合）
# 
# 空值表示不使用关键词匹配，使用默认检测逻辑
# 关键词匹配不区分大小写
header_keywords = 

# 表头检测模式
# 可选值：auto, force_header, force_no_header
# 
# auto（默认值）- 自动检测模式：
#   如果配置了header_keywords，优先使用关键词匹配
#   否则使用内置的智能检测算法
# 
# force_header - 强制表头模式：
#   始终认为第一行是表头，忽略所有检测逻辑
#   适用于确定有表头但检测不准确的情况
# 
# force_no_header - 强制数据模式：
#   始终认为第一行是数据，需要配合DDL文件使用
#   适用于确定无表头的数据文件
header_detection_mode = auto

# ===========================================
# 配置文件说明
# ===========================================
# 1. 修改配置后需要重启工具才能生效
# 2. 密码等敏感信息请妥善保管此配置文件
# 3. 如果配置文件损坏，删除后工具会自动重新生成
# 4. 更多帮助信息请参考 USER_GUIDE.md
# 5. 技术支持：请查看项目README.md

